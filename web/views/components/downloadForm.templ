package components

import "time"
import "github.com/Kostaaa1/twitch/pkg/twitch"
import "fmt"

type Quality struct {
	Resolution string	
	Value 	   string
}

type FormData struct {
	PreviewThumbnailURL string
	VideoURL 			string
	ID 					string
	Title 				string
	Owner 				string
	ViewCount 			string
	CreatedAt 			time.Time
	Qualities 			[]Quality
	MediaDuration 		string
	Type 				twitch.VideoType
	Curator 			twitch.Curator
}

templ DownloadForm(media FormData) {
	<form 
		action="/media/download"
		method="GET"	
		class="flex items-center justify-center h-[420px] w-full text-black p-4 gap-16 text-black mb-20"
	>
		<div>
		switch media.Type {
			case twitch.TypeClip:
				if media.VideoURL != "" {
					<video controls class="block object-cover object-center rounded-lg shadow-xl shadow-blue-gray-900/50">
						<source src={media.VideoURL} type="video/mp4">
					</video>
					<a target="_blank" href={templ.URL(fmt.Sprintf("https://twitch.tv/%s", media.Curator.DisplayName)) }>Cliped by 
						<span class="text-violet-500 hover:underline font-semibold w-max">
							{media.Curator.DisplayName}
						</span>
					</a>
				} else {
					<img class="block w-full max-w-[500px] object-cover object-center rounded-lg shadow-xl shadow-blue-gray-900/50" src={media.PreviewThumbnailURL} />
				}
			case twitch.TypeVOD:
				<img class="block w-full max-w-[500px] object-cover object-center rounded-lg shadow-xl shadow-blue-gray-900/50" src={media.PreviewThumbnailURL} />
		}
			<span>{media.ViewCount} views</span>
		</div>
		<div class="w-full max-w-[420px] flex flex-col gap-6 font-semibold bg-slate-100 shadow-xl shadow-blue-gray-900/50 p-6 rounded-2xl">
			<a 
				target="_blank" 
				href={templ.URL(fmt.Sprintf("https://twitch.tv/%s", media.Owner)) }
				class="text-2xl w-max"
			> 
				<span class="text-violet-500 hover:underline font-semibold">{media.Owner}</span>
			</a>
			<span class="-mb-4 text-2xl">{media.Title}</span>
			<div>      
				<label class="block mb-2 text-slate-600">Media format</label>
				<div class="relative">
					<select
						id="media_format"
						name="media_format"
						class="w-full placeholder:text-slate-400 text-slate-700 bg-white border border-slate-200 rounded pl-3 pr-8 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-400 shadow-sm focus:shadow-md appearance-none cursor-pointer">
							for _, list := range media.Qualities {
								<option value={list.Value}>{list.Value} ~ {list.Resolution}</option>
							}
					</select>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.2" stroke="currentColor" class="h-5 w-5 ml-1 absolute top-2.5 right-2.5 text-slate-700">
						<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9" />
					</svg>
				</div>
			</div>
			switch media.Type {
				case twitch.TypeVOD:
				<div class="flex justify-between flex-wrap">
					<div>
						<label class="block mb-2 text-slate-600">
							Start
						</label>
						<div class="flex items-center justify-center gap-2">
							<input 
								id="start_h"
								name="start_h"
								type="number"
								class="no-arrows w-[54px] text-center bg-white placeholder:text-slate-400 text-slate-700 border border-slate-200 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
								placeholder="0h"
								min="0"
							/>
							<input 
								id="start_m"
								name="start_m"
								type="number"
								class="no-arrows w-[54px] text-center bg-white placeholder:text-slate-400 text-slate-700 border border-slate-200 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" 
								placeholder="0m"
								min="0"
							/>
							<input 
								id="start_s"
								name="start_s"
								type="number"
								class="no-arrows w-[54px] text-center bg-white placeholder:text-slate-400 text-slate-700 border border-slate-200 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" 
								placeholder="0s"
								min="0"
							/>
						</div>
					</div>
					<div>
						<label class="block mb-2 text-slate-600">
							End
						</label>
						<div class="flex items-center justify-center w-full gap-2">
							<input 
								id="end_h"
								name="end_h"
								type="number"
								class="no-arrows w-[54px] text-center bg-white placeholder:text-slate-400 text-slate-700 border border-slate-200 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" 
								placeholder="0h"
								min="0"
							/>
							<input 
								id="end_m"
								name="end_m"
								type="number"
								class="no-arrows w-[54px] text-center bg-white placeholder:text-slate-400 text-slate-700 border border-slate-200 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" 
								placeholder="0m"
								min="0"
							/>
							<input 
								id="end_s"
								name="end_s"
								type="number"
								class="no-arrows w-[54px] text-center bg-white placeholder:text-slate-400 text-slate-700 border border-slate-200 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" 
								placeholder="0s"
								min="0"
							/>
						</div>
					</div>
				</div>
			}
			<input id="media_slug" name="media_slug" class="hidden" value={media.ID} />
			<input id="media_title" name="media_title" class="hidden" value={media.Title} />
			<input id="media_type" name="media_type" class="hidden" value={media.Type.String()} />
			<button type="submit" class="font-semibold p-2 bg-yellow-400 w-full text-center rounded-lg hover:bg-yellow-500 transition duration-300 ease text-white">Download video</button>
		</div>
	</form>
}
